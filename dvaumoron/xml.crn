#
# Copyright 2023 cornucopiarecipes authors.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

def endTag(name):
    return "".join(["</", name, ">"])

def innerXmlTag(name, attributes, end, *subTags):
    autoClose = len(subTags) == 0
    lines = [startTag(name, attributes, autoClose)]
    if not autoClose:
        for subTag in subTags:
            lines.extend(subTag)
        lines.append(end)
    return lines

def startTag(name, attributes, autoClose):
    tagBuilder = ["<", name]
    for k, v in attributes.items():
        tagBuilder.append(" ")
        tagBuilder.append(k)
        tagBuilder.append("=\"")
        tagBuilder.append(v)
        tagBuilder.append("\"")
    if autoClose:
        tagBuilder.append("/")
    tagBuilder.append(">")
    return "".join(tagBuilder)

def XmlTag(name, attributes, *subTags):
    return innerXmlTag(name, attributes, endTag(name), *subTags)

def XmlTagBuilder(name):
    end = endTag(name)
    def tag(attributes, *subTags):
        return innerXmlTag(name, attributes, end, *subTags)
    return tag
