#
# Copyright 2023 cornucopiarecipes authors.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

def StructType(file, name, *, embeddedFields=[], namedFields={}):
    fields = list(embeddedFields)
    for k, v in namedFields.items():
        fields.append(Id(k).Add(v))

    file.Type().Id(name).Struct(*fields)

def computeTypeParams(inputTypes):
    funcParams = []
    structParams = {}
    for k, v in inputTypes.items():
        kLower = k.lower()
        funcParams.append(Id(kLower).Add(v))
        structParams[Id(k)] = Id(kLower)
    return funcParams, structParams

def MakeFunc(file, name, inputTypes, outputType):
    funcParams, structParams = computeTypeParams(inputTypes)

    file.Func().Id(name).Params(*funcParams).Add(outputType).Block(
        Return(outputType.Clone().Values(structParams))
    )

def NewFunc(file, name, inputTypes, outputType):
    funcParams, structParams = computeTypeParams(inputTypes)

    file.Func().Id(name).Params(*funcParams).Op("*").Add(outputType).Block(
        Return(Op("&").Add(outputType).Values(structParams))
    )
